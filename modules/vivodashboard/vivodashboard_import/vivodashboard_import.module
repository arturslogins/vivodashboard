<?php
/**
 * @file
 * Code for the VIVO Dashboard Import feature.
 */

// AUTO LOADED: vivodashboard_import.feeds.inc

include_once 'vivodashboard_import.features.inc';

/**
 * Implements hook_menu().
 */
function vivodashboard_import_menu() {
  $items['node/%node/reimport'] = array(
    'title' => 'Reimport',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vivodashboard_import_single_form', 1),
    'access callback' => 'vivodashboard_import_single_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );
  return $items;
}

/**
 * Menu access callback.
 */
function vivodashboard_import_single_access($node) {
  if (empty($node->log) || !strpos($node->log, 'FeedsNodeProcessor')) {
    return FALSE;
  }
  return node_access('update', $node);
}

/**
 * Form constructor.
 *
 * Allows single items that were imported via Feeds to be reimported.
 */
function vivodashboard_import_single_form($form, $form_state, $node) {
  $feeds_item = db_select('feeds_item')
    ->fields('feeds_item')
    ->condition('entity_id', $node->nid)
    ->execute()
    ->fetchObject();

  if ($feeds_item && $feeds_item->url && $importer = feeds_importer_load($feeds_item->id)) {
    $form['message'] = array(
      '#prefix' => '<p>',
      '#markup' => t('Last imported %time ago using the %id importer.', array('%time' => format_interval(time() - $feeds_item->imported), '%id' => $feeds_item->id)),
      '#suffix' => '</p>',
    );
    $form['feeds_item'] = array(
      '#type' => 'value',
      '#value' => $feeds_item,
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Reimport',
    );
  }
  else {
    $form['message'] = array(
      '#markup' => '<p>This node was not imported via Feeds.</p>',
    );
  }

  return $form;
}

/**
 * Form submit handler.
 */
function vivodashboard_import_single_form_submit($form, &$form_state) {
  $item = $form['feeds_item']['#value'];
  module_load_include('inc', 'vivodashboard_import', 'vivodashboard_import.feeds');
  vivodashboard_import_run_importer(array($item->url), $item->id, FALSE);
}

/**
 * Implements hook_block_info().
 */
function vivodashboard_import_block_info() {
  $blocks['import_status'] = array(
    'info' => t('Import Status'),
    'cache' => DRUPAL_NO_CACHE
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function vivodashboard_import_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'import_status':
      $block['subject'] = '';
      $block['content'] = vivodashboard_import_status_block();
      break;

  }
  return $block;
}

/**
 * Helper to render text for the import status block.
 */
function vivodashboard_import_status_block() {
  $render = array();

  $source = feeds_source('vivo_publications');
  $date = ($source->imported) ? date('F j, Y', $source->imported) : 'Still incomplete';
  $progress = ($source->progressImporting() < FEEDS_BATCH_COMPLETE) ? round($source->progressImporting() * 100) : NULL;

  $render['date'] = array(
    '#prefix' => '<div>',
    '#markup' => t('Data last updated: @date', array('@date' => $date)),
    '#suffix' => '</div>',
  );

  if ($progress !== NULL) {
    $render['progress'] = array(
      '#prefix' => '<div>',
      '#markup' => t('Current import: @progress%', array('@progress' => $progress)),
      '#suffix' => '</div>',
    );
  }

  return $render;
}
